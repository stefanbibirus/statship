{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import{useRelationship}from'../../context/RelationshipContext';import'../../styles/animations.css';/**\n * HelixAnimation Component\n * \n * Acest component renderează animația cu dubla elice (double helix)\n * care reprezintă vizual relația dintre doi utilizatori.\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HelixAnimation=()=>{const canvasRef=useRef(null);const{relationship,userCurvePosition,partnerCurvePosition,updateUserPosition}=useRelationship();const[dimensions,setDimensions]=useState({width:0,height:0});const animationRef=useRef(null);// Configurare pentru animație\nconst config={radius:100,speed:0.02,lineWidth:5,userColor:'#ff00ff',// Neon roz\npartnerColor:'#00ffff',// Neon cyan\nmaxDistance:100// Distanța maximă de îndepărtare\n};// Funcție pentru redimensionarea canvas-ului\nconst handleResize=()=>{if(canvasRef.current){const canvas=canvasRef.current;canvas.width=window.innerWidth*0.8;canvas.height=window.innerHeight*0.6;setDimensions({width:canvas.width,height:canvas.height});}};// Inițializare și ascultător de redimensionare\nuseEffect(()=>{handleResize();window.addEventListener('resize',handleResize);return()=>window.removeEventListener('resize',handleResize);},[]);// Funcția de desenare a helixului\nconst drawHelix=(ctx,timestamp)=>{const{width,height}=dimensions;ctx.clearRect(0,0,width,height);const centerX=width/2;const centerY=height/2;const time=timestamp*config.speed;// Calculăm distanța utilizatorului actual\nconst userDistance=config.maxDistance*userCurvePosition/100;// Calculăm distanța partenerului\nconst partnerDistance=config.maxDistance*partnerCurvePosition/100;// Desenăm curba utilizatorului curent\nctx.beginPath();ctx.strokeStyle=config.userColor;ctx.lineWidth=config.lineWidth;ctx.shadowBlur=15;ctx.shadowColor=config.userColor;for(let i=0;i<Math.PI*10;i+=0.1){const x=centerX+Math.cos(i+time)*config.radius;const y=centerY+Math.sin(i*2+time)*config.radius-userDistance;if(i===0){ctx.moveTo(x,y);}else{ctx.lineTo(x,y);}}ctx.stroke();// Desenăm curba partenerului\nctx.beginPath();ctx.strokeStyle=config.partnerColor;ctx.shadowColor=config.partnerColor;for(let i=0;i<Math.PI*10;i+=0.1){const x=centerX+Math.cos(i+time+Math.PI)*config.radius;const y=centerY+Math.sin(i*2+time+Math.PI)*config.radius-partnerDistance;if(i===0){ctx.moveTo(x,y);}else{ctx.lineTo(x,y);}}ctx.stroke();// Adăugăm efect de scanline retro\ndrawScanlines(ctx,width,height);animationRef.current=requestAnimationFrame(timestamp=>drawHelix(ctx,timestamp));};// Funcție pentru desenarea scanline-urilor (efect CRT)\nconst drawScanlines=(ctx,width,height)=>{ctx.globalAlpha=0.1;ctx.fillStyle='#000000';for(let y=0;y<height;y+=4){ctx.fillRect(0,y,width,2);}ctx.globalAlpha=1.0;};// Efect pentru gestionarea animației\nuseEffect(()=>{if(!canvasRef.current||!dimensions.width)return;const ctx=canvasRef.current.getContext('2d');// Pornește animația\nanimationRef.current=requestAnimationFrame(timestamp=>drawHelix(ctx,timestamp));// Curăță animația la demontat\nreturn()=>{if(animationRef.current){cancelAnimationFrame(animationRef.current);}};},[dimensions,userCurvePosition,partnerCurvePosition,drawHelix]);// Dacă nu există o relație, afișăm un mesaj\nif(!relationship||!relationship.id){return/*#__PURE__*/_jsxs(\"div\",{className:\"helix-placeholder retro-text\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Nicio rela\\u021Bie activ\\u0103\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Adaug\\u0103 un partener folosind codul de invita\\u021Bie pentru a vedea anima\\u021Bia\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"helix-container\",children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"helix-canvas\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"helix-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"user-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tu\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"distance-control\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"retro-button\",onClick:()=>updateUserPosition(Math.max(0,userCurvePosition-10)),children:\"Apropie\"}),/*#__PURE__*/_jsx(\"button\",{className:\"retro-button\",onClick:()=>updateUserPosition(Math.min(100,userCurvePosition+10)),children:\"\\xCEndep\\u0103rteaz\\u0103\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"partner-info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:relationship.partnerName||'Partener'}),/*#__PURE__*/_jsx(\"div\",{className:\"distance-indicator\",children:partnerCurvePosition<30?/*#__PURE__*/_jsx(\"span\",{className:\"status close\",children:\"Aproape\"}):partnerCurvePosition<70?/*#__PURE__*/_jsx(\"span\",{className:\"status neutral\",children:\"Neutru\"}):/*#__PURE__*/_jsx(\"span\",{className:\"status distant\",children:\"Distant\"})})]})]})]});};export default HelixAnimation;","map":{"version":3,"names":["React","useRef","useEffect","useState","useRelationship","jsx","_jsx","jsxs","_jsxs","HelixAnimation","canvasRef","relationship","userCurvePosition","partnerCurvePosition","updateUserPosition","dimensions","setDimensions","width","height","animationRef","config","radius","speed","lineWidth","userColor","partnerColor","maxDistance","handleResize","current","canvas","window","innerWidth","innerHeight","addEventListener","removeEventListener","drawHelix","ctx","timestamp","clearRect","centerX","centerY","time","userDistance","partnerDistance","beginPath","strokeStyle","shadowBlur","shadowColor","i","Math","PI","x","cos","y","sin","moveTo","lineTo","stroke","drawScanlines","requestAnimationFrame","globalAlpha","fillStyle","fillRect","getContext","cancelAnimationFrame","id","className","children","ref","onClick","max","min","partnerName"],"sources":["/home/statship/relationship-helix-frontend/src/components/Dashboard/HelixAnimation.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useRelationship } from '../../context/RelationshipContext';\nimport '../../styles/animations.css';\n\n/**\n * HelixAnimation Component\n * \n * Acest component renderează animația cu dubla elice (double helix)\n * care reprezintă vizual relația dintre doi utilizatori.\n */\nconst HelixAnimation = () => {\n  const canvasRef = useRef(null);\n  const { relationship, userCurvePosition, partnerCurvePosition, updateUserPosition } = useRelationship();\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const animationRef = useRef(null);\n\n  // Configurare pentru animație\n  const config = {\n    radius: 100,\n    speed: 0.02,\n    lineWidth: 5,\n    userColor: '#ff00ff', // Neon roz\n    partnerColor: '#00ffff', // Neon cyan\n    maxDistance: 100, // Distanța maximă de îndepărtare\n  };\n\n  // Funcție pentru redimensionarea canvas-ului\n  const handleResize = () => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = window.innerWidth * 0.8;\n      canvas.height = window.innerHeight * 0.6;\n      setDimensions({ width: canvas.width, height: canvas.height });\n    }\n  };\n\n  // Inițializare și ascultător de redimensionare\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Funcția de desenare a helixului\n  const drawHelix = (ctx, timestamp) => {\n    const { width, height } = dimensions;\n    ctx.clearRect(0, 0, width, height);\n    \n    const centerX = width / 2;\n    const centerY = height / 2;\n    const time = timestamp * config.speed;\n    \n    // Calculăm distanța utilizatorului actual\n    const userDistance = (config.maxDistance * userCurvePosition) / 100;\n    \n    // Calculăm distanța partenerului\n    const partnerDistance = (config.maxDistance * partnerCurvePosition) / 100;\n\n    // Desenăm curba utilizatorului curent\n    ctx.beginPath();\n    ctx.strokeStyle = config.userColor;\n    ctx.lineWidth = config.lineWidth;\n    ctx.shadowBlur = 15;\n    ctx.shadowColor = config.userColor;\n\n    for (let i = 0; i < Math.PI * 10; i += 0.1) {\n      const x = centerX + Math.cos(i + time) * config.radius;\n      const y = centerY + Math.sin(i * 2 + time) * config.radius - userDistance;\n      \n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n\n    // Desenăm curba partenerului\n    ctx.beginPath();\n    ctx.strokeStyle = config.partnerColor;\n    ctx.shadowColor = config.partnerColor;\n\n    for (let i = 0; i < Math.PI * 10; i += 0.1) {\n      const x = centerX + Math.cos(i + time + Math.PI) * config.radius;\n      const y = centerY + Math.sin(i * 2 + time + Math.PI) * config.radius - partnerDistance;\n      \n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n    \n    // Adăugăm efect de scanline retro\n    drawScanlines(ctx, width, height);\n    \n    animationRef.current = requestAnimationFrame((timestamp) => drawHelix(ctx, timestamp));\n  };\n\n  // Funcție pentru desenarea scanline-urilor (efect CRT)\n  const drawScanlines = (ctx, width, height) => {\n    ctx.globalAlpha = 0.1;\n    ctx.fillStyle = '#000000';\n    \n    for (let y = 0; y < height; y += 4) {\n      ctx.fillRect(0, y, width, 2);\n    }\n    \n    ctx.globalAlpha = 1.0;\n  };\n\n  // Efect pentru gestionarea animației\n  useEffect(() => {\n    if (!canvasRef.current || !dimensions.width) return;\n    \n    const ctx = canvasRef.current.getContext('2d');\n    \n    // Pornește animația\n    animationRef.current = requestAnimationFrame((timestamp) => drawHelix(ctx, timestamp));\n    \n    // Curăță animația la demontat\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [dimensions, userCurvePosition, partnerCurvePosition, drawHelix]);\n\n  // Dacă nu există o relație, afișăm un mesaj\n  if (!relationship || !relationship.id) {\n    return (\n      <div className=\"helix-placeholder retro-text\">\n        <h2>Nicio relație activă</h2>\n        <p>Adaugă un partener folosind codul de invitație pentru a vedea animația</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"helix-container\">\n      <canvas ref={canvasRef} className=\"helix-canvas\"></canvas>\n      <div className=\"helix-controls\">\n        <div className=\"user-info\">\n          <h3>Tu</h3>\n          <div className=\"distance-control\">\n            <button \n              className=\"retro-button\"\n              onClick={() => updateUserPosition(Math.max(0, userCurvePosition - 10))}\n            >\n              Apropie\n            </button>\n            <button \n              className=\"retro-button\"\n              onClick={() => updateUserPosition(Math.min(100, userCurvePosition + 10))}\n            >\n              Îndepărtează\n            </button>\n          </div>\n        </div>\n        <div className=\"partner-info\">\n          <h3>{relationship.partnerName || 'Partener'}</h3>\n          <div className=\"distance-indicator\">\n            {partnerCurvePosition < 30 ? (\n              <span className=\"status close\">Aproape</span>\n            ) : partnerCurvePosition < 70 ? (\n              <span className=\"status neutral\">Neutru</span>\n            ) : (\n              <span className=\"status distant\">Distant</span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelixAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}