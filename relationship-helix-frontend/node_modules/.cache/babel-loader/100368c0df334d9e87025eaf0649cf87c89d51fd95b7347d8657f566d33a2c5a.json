{"ast":null,"code":"import React,{createContext,useState,useContext,useCallback}from'react';import{api}from'../services/api';import{setupWebsocket,closeWebsocket}from'../services/websocket';// Crearea contextului de relație\nimport{jsx as _jsx}from\"react/jsx-runtime\";const RelationshipContext=/*#__PURE__*/createContext(null);// Hook personalizat pentru utilizarea contextului de relație\nexport const useRelationship=()=>{const context=useContext(RelationshipContext);if(!context){throw new Error('useRelationship trebuie utilizat în cadrul unui RelationshipProvider');}return context;};/**\n * RelationshipProvider Component\n * \n * Furnizor de context pentru relația utilizatorului\n */export const RelationshipProvider=_ref=>{let{children}=_ref;const[relationship,setRelationship]=useState(null);const[userCurvePosition,setUserCurvePosition]=useState(0);const[partnerCurvePosition,setPartnerCurvePosition]=useState(0);const[wsConnected,setWsConnected]=useState(false);// Obține informații despre relația utilizatorului\nconst fetchRelationship=useCallback(async()=>{try{const response=await api.get('/api/relationship');if(response.data&&response.data.relationship){setRelationship(response.data.relationship);setUserCurvePosition(response.data.userCurvePosition||0);setPartnerCurvePosition(response.data.partnerCurvePosition||0);// Inițializează conexiunea WebSocket dacă există o relație\nif(response.data.relationship.id&&!wsConnected){initWebsocket(response.data.relationship.id);}}else{setRelationship(null);setUserCurvePosition(0);setPartnerCurvePosition(0);// Închide conexiunea WebSocket dacă nu există o relație\nif(wsConnected){closeWebsocket();setWsConnected(false);}}return response.data;}catch(error){console.error('Eroare la obținerea relației:',error);throw error;}},[wsConnected]);// Generează un cod de invitație\nconst generateInviteCode=async()=>{try{const response=await api.post('/api/relationship/invite');return response.data.inviteCode;}catch(error){console.error('Eroare la generarea codului de invitație:',error);throw error;}};// Utilizează un cod de invitație - REDENUMIT pentru claritate\nconst joinWithInviteCode=async inviteCode=>{try{const response=await api.post('/api/relationship/join',{inviteCode});if(response.data&&response.data.relationship){setRelationship(response.data.relationship);setUserCurvePosition(response.data.userCurvePosition||0);setPartnerCurvePosition(response.data.partnerCurvePosition||0);// Inițializează conexiunea WebSocket\ninitWebsocket(response.data.relationship.id);}return response.data;}catch(error){console.error('Eroare la utilizarea codului de invitație:',error);throw error;}};// Actualizează poziția curbei utilizatorului\nconst updateUserPosition=async position=>{try{const response=await api.post('/api/relationship/position',{position});setUserCurvePosition(position);return response.data;}catch(error){console.error('Eroare la actualizarea poziției:',error);throw error;}};// Șterge relația\nconst deleteRelationship=async()=>{try{await api.delete('/api/relationship');setRelationship(null);setUserCurvePosition(0);setPartnerCurvePosition(0);// Închide conexiunea WebSocket\nif(wsConnected){closeWebsocket();setWsConnected(false);}}catch(error){console.error('Eroare la ștergerea relației:',error);throw error;}};// Inițializează WebSocket pentru actualizări în timp real\nconst initWebsocket=relationshipId=>{// Callback pentru actualizarea poziției partenerului\nconst handlePositionUpdate=data=>{if(data&&data.partnerId&&data.position!==undefined){setPartnerCurvePosition(data.position);}};// Configurează conexiunea WebSocket\nsetupWebsocket(relationshipId,handlePositionUpdate);setWsConnected(true);};// Valoarea contextului\nconst value={relationship,userCurvePosition,partnerCurvePosition,fetchRelationship,generateInviteCode,joinWithInviteCode,// REDENUMIT pentru claritate\nupdateUserPosition,deleteRelationship};return/*#__PURE__*/_jsx(RelationshipContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useState","useContext","useCallback","api","setupWebsocket","closeWebsocket","jsx","_jsx","RelationshipContext","useRelationship","context","Error","RelationshipProvider","_ref","children","relationship","setRelationship","userCurvePosition","setUserCurvePosition","partnerCurvePosition","setPartnerCurvePosition","wsConnected","setWsConnected","fetchRelationship","response","get","data","id","initWebsocket","error","console","generateInviteCode","post","inviteCode","joinWithInviteCode","updateUserPosition","position","deleteRelationship","delete","relationshipId","handlePositionUpdate","partnerId","undefined","value","Provider"],"sources":["/home/statship/relationship-helix-frontend/src/context/RelationshipContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useCallback } from 'react';\nimport { api } from '../services/api';\nimport { setupWebsocket, closeWebsocket } from '../services/websocket';\n\n// Crearea contextului de relație\nconst RelationshipContext = createContext(null);\n\n// Hook personalizat pentru utilizarea contextului de relație\nexport const useRelationship = () => {\n  const context = useContext(RelationshipContext);\n  if (!context) {\n    throw new Error('useRelationship trebuie utilizat în cadrul unui RelationshipProvider');\n  }\n  return context;\n};\n\n/**\n * RelationshipProvider Component\n * \n * Furnizor de context pentru relația utilizatorului\n */\nexport const RelationshipProvider = ({ children }) => {\n  const [relationship, setRelationship] = useState(null);\n  const [userCurvePosition, setUserCurvePosition] = useState(0);\n  const [partnerCurvePosition, setPartnerCurvePosition] = useState(0);\n  const [wsConnected, setWsConnected] = useState(false);\n  \n  // Obține informații despre relația utilizatorului\n  const fetchRelationship = useCallback(async () => {\n    try {\n      const response = await api.get('/api/relationship');\n      \n      if (response.data && response.data.relationship) {\n        setRelationship(response.data.relationship);\n        setUserCurvePosition(response.data.userCurvePosition || 0);\n        setPartnerCurvePosition(response.data.partnerCurvePosition || 0);\n        \n        // Inițializează conexiunea WebSocket dacă există o relație\n        if (response.data.relationship.id && !wsConnected) {\n          initWebsocket(response.data.relationship.id);\n        }\n      } else {\n        setRelationship(null);\n        setUserCurvePosition(0);\n        setPartnerCurvePosition(0);\n        \n        // Închide conexiunea WebSocket dacă nu există o relație\n        if (wsConnected) {\n          closeWebsocket();\n          setWsConnected(false);\n        }\n      }\n      \n      return response.data;\n    } catch (error) {\n      console.error('Eroare la obținerea relației:', error);\n      throw error;\n    }\n  }, [wsConnected]);\n  \n  // Generează un cod de invitație\n  const generateInviteCode = async () => {\n    try {\n      const response = await api.post('/api/relationship/invite');\n      return response.data.inviteCode;\n    } catch (error) {\n      console.error('Eroare la generarea codului de invitație:', error);\n      throw error;\n    }\n  };\n  \n  // Utilizează un cod de invitație - REDENUMIT pentru claritate\n  const joinWithInviteCode = async (inviteCode) => {\n    try {\n      const response = await api.post('/api/relationship/join', { inviteCode });\n      \n      if (response.data && response.data.relationship) {\n        setRelationship(response.data.relationship);\n        setUserCurvePosition(response.data.userCurvePosition || 0);\n        setPartnerCurvePosition(response.data.partnerCurvePosition || 0);\n        \n        // Inițializează conexiunea WebSocket\n        initWebsocket(response.data.relationship.id);\n      }\n      \n      return response.data;\n    } catch (error) {\n      console.error('Eroare la utilizarea codului de invitație:', error);\n      throw error;\n    }\n  };\n  \n  // Actualizează poziția curbei utilizatorului\n  const updateUserPosition = async (position) => {\n    try {\n      const response = await api.post('/api/relationship/position', { position });\n      setUserCurvePosition(position);\n      return response.data;\n    } catch (error) {\n      console.error('Eroare la actualizarea poziției:', error);\n      throw error;\n    }\n  };\n  \n  // Șterge relația\n  const deleteRelationship = async () => {\n    try {\n      await api.delete('/api/relationship');\n      setRelationship(null);\n      setUserCurvePosition(0);\n      setPartnerCurvePosition(0);\n      \n      // Închide conexiunea WebSocket\n      if (wsConnected) {\n        closeWebsocket();\n        setWsConnected(false);\n      }\n    } catch (error) {\n      console.error('Eroare la ștergerea relației:', error);\n      throw error;\n    }\n  };\n  \n  // Inițializează WebSocket pentru actualizări în timp real\n  const initWebsocket = (relationshipId) => {\n    // Callback pentru actualizarea poziției partenerului\n    const handlePositionUpdate = (data) => {\n      if (data && data.partnerId && data.position !== undefined) {\n        setPartnerCurvePosition(data.position);\n      }\n    };\n    \n    // Configurează conexiunea WebSocket\n    setupWebsocket(relationshipId, handlePositionUpdate);\n    setWsConnected(true);\n  };\n  \n  // Valoarea contextului\n  const value = {\n    relationship,\n    userCurvePosition,\n    partnerCurvePosition,\n    fetchRelationship,\n    generateInviteCode,\n    joinWithInviteCode, // REDENUMIT pentru claritate\n    updateUserPosition,\n    deleteRelationship\n  };\n  \n  return (\n    <RelationshipContext.Provider value={value}>\n      {children}\n    </RelationshipContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}