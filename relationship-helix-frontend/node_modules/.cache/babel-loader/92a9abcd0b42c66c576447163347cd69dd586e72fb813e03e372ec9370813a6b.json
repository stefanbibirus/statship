{"ast":null,"code":"var _jsxFileName = \"/home/statship/relationship-helix-frontend/src/components/Dashboard/HelixAnimation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useRelationship } from '../../context/RelationshipContext';\nimport '../../styles/animations.css';\n\n/**\n * HelixAnimation Component\n * \n * Acest component renderează animația cu dubla elice (double helix)\n * care reprezintă vizual relația dintre doi utilizatori.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelixAnimation = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const {\n    relationship,\n    userCurvePosition,\n    partnerCurvePosition,\n    updateUserPosition\n  } = useRelationship();\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0\n  });\n  const animationRef = useRef(null);\n\n  // Configurare pentru animație\n  const config = {\n    radius: 100,\n    speed: 0.02,\n    lineWidth: 5,\n    userColor: '#ff00ff',\n    // Neon roz\n    partnerColor: '#00ffff',\n    // Neon cyan\n    maxDistance: 100 // Distanța maximă de îndepărtare\n  };\n\n  // Funcție pentru redimensionarea canvas-ului\n  const handleResize = () => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = window.innerWidth * 0.8;\n      canvas.height = window.innerHeight * 0.6;\n      setDimensions({\n        width: canvas.width,\n        height: canvas.height\n      });\n    }\n  };\n\n  // Inițializare și ascultător de redimensionare\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Funcția de desenare a helixului\n  const drawHelix = (ctx, timestamp) => {\n    const {\n      width,\n      height\n    } = dimensions;\n    ctx.clearRect(0, 0, width, height);\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const time = timestamp * config.speed;\n\n    // Calculăm distanța utilizatorului actual\n    const userDistance = config.maxDistance * userCurvePosition / 100;\n\n    // Calculăm distanța partenerului\n    const partnerDistance = config.maxDistance * partnerCurvePosition / 100;\n\n    // Desenăm curba utilizatorului curent\n    ctx.beginPath();\n    ctx.strokeStyle = config.userColor;\n    ctx.lineWidth = config.lineWidth;\n    ctx.shadowBlur = 15;\n    ctx.shadowColor = config.userColor;\n    for (let i = 0; i < Math.PI * 10; i += 0.1) {\n      const x = centerX + Math.cos(i + time) * config.radius;\n      const y = centerY + Math.sin(i * 2 + time) * config.radius - userDistance;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n\n    // Desenăm curba partenerului\n    ctx.beginPath();\n    ctx.strokeStyle = config.partnerColor;\n    ctx.shadowColor = config.partnerColor;\n    for (let i = 0; i < Math.PI * 10; i += 0.1) {\n      const x = centerX + Math.cos(i + time + Math.PI) * config.radius;\n      const y = centerY + Math.sin(i * 2 + time + Math.PI) * config.radius - partnerDistance;\n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n\n    // Adăugăm efect de scanline retro\n    drawScanlines(ctx, width, height);\n    animationRef.current = requestAnimationFrame(timestamp => drawHelix(ctx, timestamp));\n  };\n\n  // Funcție pentru desenarea scanline-urilor (efect CRT)\n  const drawScanlines = (ctx, width, height) => {\n    ctx.globalAlpha = 0.1;\n    ctx.fillStyle = '#000000';\n    for (let y = 0; y < height; y += 4) {\n      ctx.fillRect(0, y, width, 2);\n    }\n    ctx.globalAlpha = 1.0;\n  };\n\n  // Efect pentru gestionarea animației\n  useEffect(() => {\n    if (!canvasRef.current || !dimensions.width) return;\n    const ctx = canvasRef.current.getContext('2d');\n\n    // Pornește animația\n    animationRef.current = requestAnimationFrame(timestamp => drawHelix(ctx, timestamp));\n\n    // Curăță animația la demontat\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [dimensions, userCurvePosition, partnerCurvePosition, drawHelix]);\n\n  // Dacă nu există o relație, afișăm un mesaj\n  if (!relationship || !relationship.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"helix-placeholder retro-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Nicio rela\\u021Bie activ\\u0103\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Adaug\\u0103 un partener folosind codul de invita\\u021Bie pentru a vedea anima\\u021Bia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"helix-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"helix-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"helix-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Tu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distance-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retro-button\",\n            onClick: () => updateUserPosition(Math.max(0, userCurvePosition - 10)),\n            children: \"Apropie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"retro-button\",\n            onClick: () => updateUserPosition(Math.min(100, userCurvePosition + 10)),\n            children: \"\\xCEndep\\u0103rteaz\\u0103\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"partner-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: relationship.partnerName || 'Partener'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distance-indicator\",\n          children: partnerCurvePosition < 30 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status close\",\n            children: \"Aproape\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this) : partnerCurvePosition < 70 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status neutral\",\n            children: \"Neutru\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status distant\",\n            children: \"Distant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(HelixAnimation, \"8UYKFYvV8VewN21b/pUx+qBs1tc=\", false, function () {\n  return [useRelationship];\n});\n_c = HelixAnimation;\nexport default HelixAnimation;\nvar _c;\n$RefreshReg$(_c, \"HelixAnimation\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useRelationship","jsxDEV","_jsxDEV","HelixAnimation","_s","canvasRef","relationship","userCurvePosition","partnerCurvePosition","updateUserPosition","dimensions","setDimensions","width","height","animationRef","config","radius","speed","lineWidth","userColor","partnerColor","maxDistance","handleResize","current","canvas","window","innerWidth","innerHeight","addEventListener","removeEventListener","drawHelix","ctx","timestamp","clearRect","centerX","centerY","time","userDistance","partnerDistance","beginPath","strokeStyle","shadowBlur","shadowColor","i","Math","PI","x","cos","y","sin","moveTo","lineTo","stroke","drawScanlines","requestAnimationFrame","globalAlpha","fillStyle","fillRect","getContext","cancelAnimationFrame","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","max","min","partnerName","_c","$RefreshReg$"],"sources":["/home/statship/relationship-helix-frontend/src/components/Dashboard/HelixAnimation.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useRelationship } from '../../context/RelationshipContext';\nimport '../../styles/animations.css';\n\n/**\n * HelixAnimation Component\n * \n * Acest component renderează animația cu dubla elice (double helix)\n * care reprezintă vizual relația dintre doi utilizatori.\n */\nconst HelixAnimation = () => {\n  const canvasRef = useRef(null);\n  const { relationship, userCurvePosition, partnerCurvePosition, updateUserPosition } = useRelationship();\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const animationRef = useRef(null);\n\n  // Configurare pentru animație\n  const config = {\n    radius: 100,\n    speed: 0.02,\n    lineWidth: 5,\n    userColor: '#ff00ff', // Neon roz\n    partnerColor: '#00ffff', // Neon cyan\n    maxDistance: 100, // Distanța maximă de îndepărtare\n  };\n\n  // Funcție pentru redimensionarea canvas-ului\n  const handleResize = () => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = window.innerWidth * 0.8;\n      canvas.height = window.innerHeight * 0.6;\n      setDimensions({ width: canvas.width, height: canvas.height });\n    }\n  };\n\n  // Inițializare și ascultător de redimensionare\n  useEffect(() => {\n    handleResize();\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Funcția de desenare a helixului\n  const drawHelix = (ctx, timestamp) => {\n    const { width, height } = dimensions;\n    ctx.clearRect(0, 0, width, height);\n    \n    const centerX = width / 2;\n    const centerY = height / 2;\n    const time = timestamp * config.speed;\n    \n    // Calculăm distanța utilizatorului actual\n    const userDistance = (config.maxDistance * userCurvePosition) / 100;\n    \n    // Calculăm distanța partenerului\n    const partnerDistance = (config.maxDistance * partnerCurvePosition) / 100;\n\n    // Desenăm curba utilizatorului curent\n    ctx.beginPath();\n    ctx.strokeStyle = config.userColor;\n    ctx.lineWidth = config.lineWidth;\n    ctx.shadowBlur = 15;\n    ctx.shadowColor = config.userColor;\n\n    for (let i = 0; i < Math.PI * 10; i += 0.1) {\n      const x = centerX + Math.cos(i + time) * config.radius;\n      const y = centerY + Math.sin(i * 2 + time) * config.radius - userDistance;\n      \n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n\n    // Desenăm curba partenerului\n    ctx.beginPath();\n    ctx.strokeStyle = config.partnerColor;\n    ctx.shadowColor = config.partnerColor;\n\n    for (let i = 0; i < Math.PI * 10; i += 0.1) {\n      const x = centerX + Math.cos(i + time + Math.PI) * config.radius;\n      const y = centerY + Math.sin(i * 2 + time + Math.PI) * config.radius - partnerDistance;\n      \n      if (i === 0) {\n        ctx.moveTo(x, y);\n      } else {\n        ctx.lineTo(x, y);\n      }\n    }\n    ctx.stroke();\n    \n    // Adăugăm efect de scanline retro\n    drawScanlines(ctx, width, height);\n    \n    animationRef.current = requestAnimationFrame((timestamp) => drawHelix(ctx, timestamp));\n  };\n\n  // Funcție pentru desenarea scanline-urilor (efect CRT)\n  const drawScanlines = (ctx, width, height) => {\n    ctx.globalAlpha = 0.1;\n    ctx.fillStyle = '#000000';\n    \n    for (let y = 0; y < height; y += 4) {\n      ctx.fillRect(0, y, width, 2);\n    }\n    \n    ctx.globalAlpha = 1.0;\n  };\n\n  // Efect pentru gestionarea animației\n  useEffect(() => {\n    if (!canvasRef.current || !dimensions.width) return;\n    \n    const ctx = canvasRef.current.getContext('2d');\n    \n    // Pornește animația\n    animationRef.current = requestAnimationFrame((timestamp) => drawHelix(ctx, timestamp));\n    \n    // Curăță animația la demontat\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [dimensions, userCurvePosition, partnerCurvePosition, drawHelix]);\n\n  // Dacă nu există o relație, afișăm un mesaj\n  if (!relationship || !relationship.id) {\n    return (\n      <div className=\"helix-placeholder retro-text\">\n        <h2>Nicio relație activă</h2>\n        <p>Adaugă un partener folosind codul de invitație pentru a vedea animația</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"helix-container\">\n      <canvas ref={canvasRef} className=\"helix-canvas\"></canvas>\n      <div className=\"helix-controls\">\n        <div className=\"user-info\">\n          <h3>Tu</h3>\n          <div className=\"distance-control\">\n            <button \n              className=\"retro-button\"\n              onClick={() => updateUserPosition(Math.max(0, userCurvePosition - 10))}\n            >\n              Apropie\n            </button>\n            <button \n              className=\"retro-button\"\n              onClick={() => updateUserPosition(Math.min(100, userCurvePosition + 10))}\n            >\n              Îndepărtează\n            </button>\n          </div>\n        </div>\n        <div className=\"partner-info\">\n          <h3>{relationship.partnerName || 'Partener'}</h3>\n          <div className=\"distance-indicator\">\n            {partnerCurvePosition < 30 ? (\n              <span className=\"status close\">Aproape</span>\n            ) : partnerCurvePosition < 70 ? (\n              <span className=\"status neutral\">Neutru</span>\n            ) : (\n              <span className=\"status distant\">Distant</span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HelixAnimation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}