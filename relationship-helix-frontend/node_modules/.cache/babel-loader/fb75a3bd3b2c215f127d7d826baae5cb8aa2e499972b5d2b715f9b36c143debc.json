{"ast":null,"code":"import{api}from'./api';/**\n * Autentifică un utilizator\n * \n * @param {string} email Adresa de email\n * @param {string} password Parola\n * @returns {Promise} Datele utilizatorului și token-ul\n */export const login=async(email,password)=>{try{const response=await api.post('/api/auth/login',{email,password});return response.data;}catch(error){if(error.response&&error.response.data&&error.response.data.message){throw new Error(error.response.data.message);}throw error;}};/**\n * Înregistrează un utilizator nou\n * \n * @param {string} username Numele de utilizator\n * @param {string} email Adresa de email\n * @param {string} password Parola\n * @returns {Promise} Datele utilizatorului și token-ul\n */export const register=async(username,email,password)=>{try{const response=await api.post('/api/auth/register',{username,email,password});return response.data;}catch(error){if(error.response&&error.response.data&&error.response.data.message){throw new Error(error.response.data.message);}throw error;}};/**\n * Verifică autentificarea utilizatorului curent\n * \n * @returns {Promise} Datele utilizatorului\n */export const checkAuth=async()=>{try{const response=await api.get('/api/auth/me');return response.data.user;}catch(error){throw error;}};","map":{"version":3,"names":["api","login","email","password","response","post","data","error","message","Error","register","username","checkAuth","get","user"],"sources":["/home/statship/relationship-helix-frontend/src/services/auth.js"],"sourcesContent":["import { api } from './api';\n\n/**\n * Autentifică un utilizator\n * \n * @param {string} email Adresa de email\n * @param {string} password Parola\n * @returns {Promise} Datele utilizatorului și token-ul\n */\nexport const login = async (email, password) => {\n  try {\n    const response = await api.post('/api/auth/login', { email, password });\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw error;\n  }\n};\n\n/**\n * Înregistrează un utilizator nou\n * \n * @param {string} username Numele de utilizator\n * @param {string} email Adresa de email\n * @param {string} password Parola\n * @returns {Promise} Datele utilizatorului și token-ul\n */\nexport const register = async (username, email, password) => {\n  try {\n    const response = await api.post('/api/auth/register', { username, email, password });\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.data && error.response.data.message) {\n      throw new Error(error.response.data.message);\n    }\n    throw error;\n  }\n};\n\n/**\n * Verifică autentificarea utilizatorului curent\n * \n * @returns {Promise} Datele utilizatorului\n */\nexport const checkAuth = async () => {\n  try {\n    const response = await api.get('/api/auth/me');\n    return response.data.user;\n  } catch (error) {\n    throw error;\n  }\n};"],"mappings":"AAAA,OAASA,GAAG,KAAQ,OAAO,CAE3B;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAC9C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,iBAAiB,CAAE,CAAEH,KAAK,CAAEC,QAAS,CAAC,CAAC,CACvE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,GAAIA,KAAK,CAACH,QAAQ,EAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,EAAIC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAE,CACxE,KAAM,IAAI,CAAAC,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC,CAC9C,CACA,KAAM,CAAAD,KAAK,CACb,CACF,CAAC,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAG,QAAQ,CAAG,KAAAA,CAAOC,QAAQ,CAAET,KAAK,CAAEC,QAAQ,GAAK,CAC3D,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,oBAAoB,CAAE,CAAEM,QAAQ,CAAET,KAAK,CAAEC,QAAS,CAAC,CAAC,CACpF,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,GAAIA,KAAK,CAACH,QAAQ,EAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,EAAIC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAE,CACxE,KAAM,IAAI,CAAAC,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACE,OAAO,CAAC,CAC9C,CACA,KAAM,CAAAD,KAAK,CACb,CACF,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAK,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAJ,GAAG,CAACa,GAAG,CAAC,cAAc,CAAC,CAC9C,MAAO,CAAAT,QAAQ,CAACE,IAAI,CAACQ,IAAI,CAC3B,CAAE,MAAOP,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}