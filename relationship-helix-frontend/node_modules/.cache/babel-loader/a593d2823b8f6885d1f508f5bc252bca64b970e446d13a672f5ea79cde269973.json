{"ast":null,"code":"var _jsxFileName = \"/home/statship/frontend/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { login as loginApi, register as registerApi, checkAuth } from '../services/auth';\n\n// Crearea contextului de autentificare\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\n\n// Hook personalizat pentru utilizarea contextului de autentificare\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth trebuie utilizat în cadrul unui AuthProvider');\n  }\n  return context;\n};\n\n/**\n * AuthProvider Component\n * \n * Furnizor de context pentru autentificare\n */\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [initialized, setInitialized] = useState(false);\n\n  // Verifică autentificarea la încărcarea aplicației\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('auth_token');\n      if (token) {\n        try {\n          // Setează token-ul în header-ele de autentificare\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Verifică dacă token-ul este valid\n          const userData = await checkAuth();\n          setUser(userData);\n        } catch (error) {\n          console.error('Token invalid sau expirat', error);\n          localStorage.removeItem('auth_token');\n          delete api.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n      setInitialized(true);\n    };\n    initAuth();\n  }, []);\n\n  // Funcția de autentificare\n  const login = async (email, password) => {\n    try {\n      const {\n        user: userData,\n        token\n      } = await loginApi(email, password);\n\n      // Salvează token-ul în localStorage\n      localStorage.setItem('auth_token', token);\n\n      // Setează token-ul în header-ele de autentificare\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Actualizează starea utilizatorului\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Funcția de înregistrare\n  const register = async (username, email, password) => {\n    try {\n      const {\n        user: userData,\n        token\n      } = await registerApi(username, email, password);\n\n      // Salvează token-ul în localStorage\n      localStorage.setItem('auth_token', token);\n\n      // Setează token-ul în header-ele de autentificare\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Actualizează starea utilizatorului\n      setUser(userData);\n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Funcția de delogare\n  const logout = () => {\n    // Șterge token-ul din localStorage\n    localStorage.removeItem('auth_token');\n\n    // Șterge token-ul din header-ele de autentificare\n    delete api.defaults.headers.common['Authorization'];\n\n    // Resetează starea utilizatorului\n    setUser(null);\n  };\n\n  // Valoarea contextului\n  const value = {\n    user,\n    loading,\n    initialized,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"FKjX8Ko0uy7WJEUSeSk+H5pWLtA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","login","loginApi","register","registerApi","checkAuth","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initialized","setInitialized","initAuth","token","localStorage","getItem","defaults","headers","common","userData","error","console","removeItem","email","password","setItem","username","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/statship/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { login as loginApi, register as registerApi, checkAuth } from '../services/auth';\n\n// Crearea contextului de autentificare\nconst AuthContext = createContext(null);\n\n// Hook personalizat pentru utilizarea contextului de autentificare\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth trebuie utilizat în cadrul unui AuthProvider');\n  }\n  return context;\n};\n\n/**\n * AuthProvider Component\n * \n * Furnizor de context pentru autentificare\n */\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [initialized, setInitialized] = useState(false);\n  \n  // Verifică autentificarea la încărcarea aplicației\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('auth_token');\n      \n      if (token) {\n        try {\n          // Setează token-ul în header-ele de autentificare\n          api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n          \n          // Verifică dacă token-ul este valid\n          const userData = await checkAuth();\n          setUser(userData);\n        } catch (error) {\n          console.error('Token invalid sau expirat', error);\n          localStorage.removeItem('auth_token');\n          delete api.defaults.headers.common['Authorization'];\n        }\n      }\n      \n      setLoading(false);\n      setInitialized(true);\n    };\n    \n    initAuth();\n  }, []);\n  \n  // Funcția de autentificare\n  const login = async (email, password) => {\n    try {\n      const { user: userData, token } = await loginApi(email, password);\n      \n      // Salvează token-ul în localStorage\n      localStorage.setItem('auth_token', token);\n      \n      // Setează token-ul în header-ele de autentificare\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Actualizează starea utilizatorului\n      setUser(userData);\n      \n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  \n  // Funcția de înregistrare\n  const register = async (username, email, password) => {\n    try {\n      const { user: userData, token } = await registerApi(username, email, password);\n      \n      // Salvează token-ul în localStorage\n      localStorage.setItem('auth_token', token);\n      \n      // Setează token-ul în header-ele de autentificare\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      \n      // Actualizează starea utilizatorului\n      setUser(userData);\n      \n      return userData;\n    } catch (error) {\n      throw error;\n    }\n  };\n  \n  // Funcția de delogare\n  const logout = () => {\n    // Șterge token-ul din localStorage\n    localStorage.removeItem('auth_token');\n    \n    // Șterge token-ul din header-ele de autentificare\n    delete api.defaults.headers.common['Authorization'];\n    \n    // Resetează starea utilizatorului\n    setUser(null);\n  };\n  \n  // Valoarea contextului\n  const value = {\n    user,\n    loading,\n    initialized,\n    login,\n    register,\n    logout\n  };\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}